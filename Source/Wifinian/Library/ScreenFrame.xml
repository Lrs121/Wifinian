<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ScreenFrame</name>
    </assembly>
    <members>
        <member name="T:ScreenFrame.Helper.DpiScaleExtension">
            <summary>
            Extension methods for <see cref="T:System.Windows.DpiScale"/>
            </summary>
        </member>
        <member name="T:ScreenFrame.Helper.OsVersion">
            <summary>
            OS version information
            </summary>
        </member>
        <member name="P:ScreenFrame.Helper.OsVersion.IsVistaOrNewer">
            <summary>
            Whether OS is Windows Vista or newer
            </summary>
            <remarks>Windows Vista = version 6.0</remarks>
        </member>
        <member name="P:ScreenFrame.Helper.OsVersion.Is8OrNewer">
            <summary>
            Whether OS is Windows 8 or newer
            </summary>
            <remarks>Windows 8 = version 6.2</remarks>
        </member>
        <member name="P:ScreenFrame.Helper.OsVersion.Is81OrNewer">
            <summary>
            Whether OS is Windows 8.1 or newer
            </summary>
            <remarks>Windows 8.1 = version 6.3</remarks>
        </member>
        <member name="P:ScreenFrame.Helper.OsVersion.Is10Threshold1OrNewer">
            <summary>
            Whether OS is Windows 10 (Threshold 1) or newer
            </summary>
            <remarks>Windows 10 (Threshold 1) = version 10.0.10240</remarks>
        </member>
        <member name="P:ScreenFrame.Helper.OsVersion.Is10Redstone1OrNewer">
            <summary>
            Whether OS is Windows 10 (Redstone 1) or newer
            </summary>
            <remarks>Windows 10 (Redstone 1) = version 10.0.14393</remarks>
        </member>
        <member name="P:ScreenFrame.Helper.OsVersion.Is10Redstone3OrNewer">
            <summary>
            Whether OS is Windows 10 (Redstone 3) or newer
            </summary>
            <remarks>Windows 10 (Redstone 3) = version 10.0.16299</remarks>
        </member>
        <member name="T:ScreenFrame.Movers.WindowMover">
            <summary>
            Window mover
            </summary>
        </member>
        <member name="F:ScreenFrame.Movers.WindowMover._window">
            <summary>
            Window to be moved
            </summary>
        </member>
        <member name="P:ScreenFrame.Movers.WindowMover.Dpi">
            <summary>
            Per-Monitor DPI of window
            </summary>
        </member>
        <member name="M:ScreenFrame.Movers.WindowMover.#ctor(System.Windows.Window)">
            <summary>
            Constructor
            </summary>
            <param name="window">Window to be moved</param>
        </member>
        <member name="M:ScreenFrame.Movers.WindowMover.AdjustWindow(System.Windows.DpiScale)">
            <summary>
            Adjusts DPI of window.
            </summary>
            <param name="dpi">DPI information</param>
        </member>
        <member name="M:ScreenFrame.Movers.WindowMover.WndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
            <summary>
            Handles window messages.
            </summary>
        </member>
        <member name="M:ScreenFrame.Movers.WindowMover.HandleWindowPosChanging(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
            <summary>
            Handles window position changing event.
            </summary>
        </member>
        <member name="M:ScreenFrame.Movers.WindowMover.HandleWindowPosChanged(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
            <summary>
            Handles window position changed event.
            </summary>
        </member>
        <member name="M:ScreenFrame.Movers.WindowMover.HandleDpiChanged(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
            <summary>
            Handles DPI changed event.
            </summary>
        </member>
        <member name="T:ScreenFrame.Movers.BasicWindowMover">
            <summary>
            Window mover which implements basic functions
            </summary>
        </member>
        <member name="M:ScreenFrame.Movers.BasicWindowMover.#ctor(System.Windows.Window)">
            <summary>
            Constructor
            </summary>
            <param name="window">Window to be moved</param>
        </member>
        <member name="P:ScreenFrame.Movers.BasicWindowMover.PivotAlignment">
            <summary>
            Alignment of pivot
            </summary>
        </member>
        <member name="M:ScreenFrame.Movers.BasicWindowMover.HandleWindowPosChanging(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
            <summary>
            Handles window position changing event.
            </summary>
        </member>
        <member name="M:ScreenFrame.Movers.BasicWindowMover.HandleWindowPosChanged(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
            <summary>
            Handles window position changed event.
            </summary>
        </member>
        <member name="M:ScreenFrame.Movers.BasicWindowMover.TryGetAdjacentLocation(System.Double,System.Double,System.Windows.Point@)">
            <summary>
            Tries to get the adjacent location using specified window width and height.
            </summary>
            <param name="windowWidth">Window width</param>
            <param name="windowHeight">Window height</param>
            <param name="location">Location of window</param>
            <returns>True if succeeded</returns>
        </member>
        <member name="M:ScreenFrame.Movers.BasicWindowMover.TryGetAdjustedPosition(System.Double,System.Double,System.Windows.Point,System.Windows.Rect@)">
            <summary>
            Tries to get the adjusted position contained in the monitor using specified window location.
            </summary>
            <param name="windowWidth">Window width</param>
            <param name="windowHeight">Window height</param>
            <param name="location">Location of window</param>
            <param name="position">Position of window</param>
            <returns>True if succeeded</returns>
        </member>
        <member name="T:ScreenFrame.Movers.FloatWindowMover">
            <summary>
            Window mover which implements functions for float window
            </summary>
        </member>
        <member name="M:ScreenFrame.Movers.FloatWindowMover.#ctor(System.Windows.Window,System.Windows.Point)">
            <summary>
            Constructor
            </summary>
            <param name="window">Window to be moved</param>
            <param name="pivot">Pivot point to be referred</param>
        </member>
        <member name="P:ScreenFrame.Movers.FloatWindowMover.PivotAlignment">
            <summary>
            Alignment of pivot
            </summary>
        </member>
        <member name="M:ScreenFrame.Movers.FloatWindowMover.TryGetAdjacentLocation(System.Double,System.Double,System.Windows.Point@)">
            <summary>
            Tries to get the adjacent location using specified window width and height.
            </summary>
            <param name="windowWidth">Window width</param>
            <param name="windowHeight">Window height</param>
            <param name="location">Location of window</param>
            <returns>True if succeeded</returns>
        </member>
        <member name="M:ScreenFrame.Movers.FloatWindowMover.TryGetAdjacentLocationToPivot(System.Double,System.Double,System.Windows.Point@)">
            <summary>
            Tries to get the adjacent location to pivot point using specified window width and height.
            </summary>
            <param name="windowWidth">Window width</param>
            <param name="windowHeight">Window height</param>
            <param name="location">Location of window</param>
            <returns>True if succeeded</returns>
        </member>
        <member name="T:ScreenFrame.Movers.StickWindowMover">
            <summary>
            Window mover which implements functions for stick window
            </summary>
        </member>
        <member name="M:ScreenFrame.Movers.StickWindowMover.#ctor(System.Windows.Window,System.Windows.Forms.NotifyIcon)">
            <summary>
            Constructor
            </summary>
            <param name="window">Window to be moved</param>
            <param name="notifyIcon">NotifyIcon to be referred</param>
        </member>
        <member name="P:ScreenFrame.Movers.StickWindowMover.PivotAlignment">
            <summary>
            Alignment of pivot
            </summary>
        </member>
        <member name="M:ScreenFrame.Movers.StickWindowMover.TryGetAdjacentLocation(System.Double,System.Double,System.Windows.Point@)">
            <summary>
            Tries to get the adjacent location using specified window width and height.
            </summary>
            <param name="windowWidth">Window width</param>
            <param name="windowHeight">Window height</param>
            <param name="location">Location of window</param>
            <returns>True if succeeded</returns>
        </member>
        <member name="M:ScreenFrame.Movers.StickWindowMover.TryGetAdjacentLocationToTaskbar(System.Double,System.Double,System.Windows.Point@)">
            <summary>
            Tries to get the adjacent location to NotifyIcon using specified window width and height.
            </summary>
            <param name="windowWidth">Window width</param>
            <param name="windowHeight">Window height</param>
            <param name="location">Location of window</param>
            <returns>True if succeeded</returns>
        </member>
        <member name="T:ScreenFrame.Movers.SwitchWindowMover">
            <summary>
            Window mover which implements functions for switch window
            </summary>
        </member>
        <member name="P:ScreenFrame.Movers.SwitchWindowMover.IsDeparted">
            <summary>
            Whether the window is departed from taskbar
            </summary>
        </member>
        <member name="E:ScreenFrame.Movers.SwitchWindowMover.IsDepartedChanged">
            <summary>
            Occurs when IsDeparted is changed.
            </summary>
        </member>
        <member name="P:ScreenFrame.Movers.SwitchWindowMover.DepartureInterval">
            <summary>
            Time interval before departure
            </summary>
        </member>
        <member name="M:ScreenFrame.Movers.SwitchWindowMover.#ctor(System.Windows.Window,System.Windows.Forms.NotifyIcon)">
            <summary>
            Constructor
            </summary>
            <param name="window">Window to be moved</param>
            <param name="notifyIcon">NotifyIcon to be referred</param>
        </member>
        <member name="P:ScreenFrame.Movers.SwitchWindowMover.PivotAlignment">
            <summary>
            Alignment of pivot
            </summary>
        </member>
        <member name="M:ScreenFrame.Movers.SwitchWindowMover.WndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
            <summary>
            Handles window messages.
            </summary>
        </member>
        <member name="M:ScreenFrame.Movers.SwitchWindowMover.TryGetAdjacentLocation(System.Double,System.Double,System.Windows.Point@)">
            <summary>
            Tries to get the adjacent location using specified window width and height.
            </summary>
            <param name="windowWidth">Window width</param>
            <param name="windowHeight">Window height</param>
            <param name="location">Location of window</param>
            <returns>True if succeeded</returns>
        </member>
        <member name="T:ScreenFrame.NotifyIconContainer">
            <summary>
            Container of NotifyIcon
            </summary>
        </member>
        <member name="P:ScreenFrame.NotifyIconContainer.NotifyIcon">
            <summary>
            NotifyIcon instance
            </summary>
        </member>
        <member name="M:ScreenFrame.NotifyIconContainer.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:ScreenFrame.NotifyIconContainer.Text">
            <summary>
            NotifyIcon text
            </summary>
        </member>
        <member name="M:ScreenFrame.NotifyIconContainer.ShowIcon(System.String,System.String)">
            <summary>
            Shows NotifyIcon.
            </summary>
            <param name="iconPath">Path to icon for NotifyIcon</param>
            <param name="iconText">Text for NotifyIcon</param>
        </member>
        <member name="M:ScreenFrame.NotifyIconContainer.ShowIcon(System.Drawing.Icon,System.String)">
            <summary>
            Shows NotifyIcon.
            </summary>
            <param name="icon">Icon for NotifyIcon</param>
            <param name="iconText">Text for NotifyIcon</param>
        </member>
        <member name="M:ScreenFrame.NotifyIconContainer.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Processes windows message sent to NotifyIcon.
            </summary>
            <param name="m">Message</param>
        </member>
        <member name="M:ScreenFrame.NotifyIconContainer.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)">
            <summary>
            Called when DPI of the monitor to which NotifyIcon belongs changed.
            </summary>
            <param name="oldDpi">Old DPI information</param>
            <param name="newDpi">New DPI information</param>
        </member>
        <member name="E:ScreenFrame.NotifyIconContainer.MouseLeftButtonClick">
            <summary>
            Occurs when mouse left button is clicked while mouse pointer is over NotifyIcon.
            </summary>
        </member>
        <member name="E:ScreenFrame.NotifyIconContainer.MouseRightButtonClick">
            <summary>
            Occurs when mouse right button is clicked while mouse pointer is over NotifyIcon.
            </summary>
        </member>
        <member name="M:ScreenFrame.NotifyIconContainer.Dispose">
            <summary>
            Public implementation of Dispose pattern
            </summary>
        </member>
        <member name="M:ScreenFrame.NotifyIconContainer.Dispose(System.Boolean)">
            <summary>
            Protected implementation of Dispose pattern
            </summary>
        </member>
        <member name="M:ScreenFrame.NotifyIconHelper.SetNotifyIconWindowForeground(System.Windows.Forms.NotifyIcon)">
            <summary>
            Sets the window of a specified NotifyIcon into foreground.
            </summary>
            <param name="notifyIcon">NotifyIcon</param>
            <returns>True if succeeded</returns>
        </member>
        <member name="M:ScreenFrame.NotifyIconHelper.TryGetNotifyIconClickedPoint(System.Windows.Forms.NotifyIcon,System.Windows.Point@)">
            <summary>
             Tries to get the point where a specified NotifyIcon is clicked.
            </summary>
            <param name="notifyIcon">NotifyIcon</param>
            <param name="point">Clicked point</param>
            <returns>True if succeeded</returns>
            <remarks>MouseEventArgs.Location property of MouseClick event does not contain data.</remarks>
        </member>
        <member name="M:ScreenFrame.NotifyIconHelper.TryGetNotifyIconRect(System.Windows.Forms.NotifyIcon,System.Windows.Rect@)">
            <summary>
            Tries to get the rectangle of a specified NotifyIcon.
            </summary>
            <param name="notifyIcon">NotifyIcon</param>
            <param name="iconRect">Rectangle of the NotifyIcon</param>
            <returns>True if succeeded</returns>
            <remarks>
            The idea to get the rectangle of a NotifyIcon is derived from:
            https://github.com/rzhw/SuperNotifyIcon
            </remarks>
        </member>
        <member name="T:ScreenFrame.PivotAlignment">
            <summary>
            Alignment of pivot (clockwise)
            </summary>
        </member>
        <member name="F:ScreenFrame.PivotAlignment.None">
            <summary>
            None (valid value)
            </summary>
        </member>
        <member name="F:ScreenFrame.PivotAlignment.TopLeft">
            <summary>
            Top-Left
            </summary>
        </member>
        <member name="F:ScreenFrame.PivotAlignment.TopRight">
            <summary>
            Top-Right
            </summary>
        </member>
        <member name="F:ScreenFrame.PivotAlignment.BottomRight">
            <summary>
            Bottom-Right
            </summary>
        </member>
        <member name="F:ScreenFrame.PivotAlignment.BottomLeft">
            <summary>
            Bottom-Left
            </summary>
        </member>
        <member name="T:ScreenFrame.VisualTreeHelperAddition">
            <summary>
            Additional methods for <see cref="T:System.Windows.Media.VisualTreeHelper"/>
            </summary>
        </member>
        <member name="F:ScreenFrame.VisualTreeHelperAddition.MONITOR_DEFAULTTO.MONITOR_DEFAULTTONULL">
            <summary>
            If no display monitor intersects, returns null.
            </summary>
        </member>
        <member name="F:ScreenFrame.VisualTreeHelperAddition.MONITOR_DEFAULTTO.MONITOR_DEFAULTTOPRIMARY">
            <summary>
            If no display monitor intersects, returns a handle to the primary display monitor.
            </summary>
        </member>
        <member name="F:ScreenFrame.VisualTreeHelperAddition.MONITOR_DEFAULTTO.MONITOR_DEFAULTTONEAREST">
            <summary>
            If no display monitor intersects, returns a handle to the display monitor that is nearest to the rectangle.
            </summary>
        </member>
        <member name="F:ScreenFrame.VisualTreeHelperAddition.MONITOR_DPI_TYPE.MDT_Effective_DPI">
            <summary>
            Effective DPI that incorporates accessibility overrides and matches what Desktop Window Manage (DWM) uses to scale desktop applications
            </summary>
        </member>
        <member name="F:ScreenFrame.VisualTreeHelperAddition.MONITOR_DPI_TYPE.MDT_Angular_DPI">
            <summary>
            DPI that ensures rendering at a compliant angular resolution on the screen, without incorporating accessibility overrides
            </summary>
        </member>
        <member name="F:ScreenFrame.VisualTreeHelperAddition.MONITOR_DPI_TYPE.MDT_Raw_DPI">
            <summary>
            Linear DPI of the screen as measured on the screen itself
            </summary>
        </member>
        <member name="F:ScreenFrame.VisualTreeHelperAddition.MONITOR_DPI_TYPE.MDT_Default">
            <summary>
            Default DPI
            </summary>
        </member>
        <member name="P:ScreenFrame.VisualTreeHelperAddition.SystemDpi">
            <summary>
            System DPI
            </summary>
        </member>
        <member name="M:ScreenFrame.VisualTreeHelperAddition.GetDpi(System.Windows.Media.Visual)">
            <summary>
            Gets Per-Monitor DPI of the monitor to which a specified Visual belongs.
            </summary>
            <param name="visual">Visual</param>
            <returns>DPI information</returns>
        </member>
        <member name="M:ScreenFrame.VisualTreeHelperAddition.GetNotificationAreaDpi">
            <summary>
            Gets Per-Monitor DPI of the monitor to which the notification area belongs.
            </summary>
            <returns>DPI information</returns>
        </member>
        <member name="M:ScreenFrame.VisualTreeHelperAddition.ConvertToDpiScale(System.IntPtr)">
            <summary>
            Converts WM_DPICHANGED message's wParam value to DpiScale.
            </summary>
            <param name="wParam">wParam value</param>
            <returns>DPI information</returns>
        </member>
        <member name="M:ScreenFrame.VisualTreeHelperAddition.ConvertToRect(System.IntPtr)">
            <summary>
            Converts WM_DPICHANGED message's lParam value to Rect.
            </summary>
            <param name="lParam">lParam value</param>
            <returns>Rectangle</returns>
        </member>
        <member name="F:ScreenFrame.WindowHelper.MONITOR_DEFAULTTO.MONITOR_DEFAULTTONULL">
            <summary>
            If no display monitor intersects, returns null.
            </summary>
        </member>
        <member name="F:ScreenFrame.WindowHelper.MONITOR_DEFAULTTO.MONITOR_DEFAULTTOPRIMARY">
            <summary>
            If no display monitor intersects, returns a handle to the primary display monitor.
            </summary>
        </member>
        <member name="F:ScreenFrame.WindowHelper.MONITOR_DEFAULTTO.MONITOR_DEFAULTTONEAREST">
            <summary>
            If no display monitor intersects, returns a handle to the display monitor that is nearest to the rectangle.
            </summary>
        </member>
    </members>
</doc>
