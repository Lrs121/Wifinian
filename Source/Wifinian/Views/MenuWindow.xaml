<Window x:Class="Wifinian.Views.MenuWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
		xmlns:models="clr-namespace:Wifinian.Models"
		Width="200"
		ResizeMode="NoResize" SizeToContent="WidthAndHeight"
		ShowInTaskbar="False" Topmost="True"
		AllowsTransparency="True" WindowStyle="None"
		Background="{StaticResource App.Background.Difference}">
	<Window.Resources>
		<!-- Menu separator -->
		<Style x:Key="MenuSeparatorStyle" TargetType="{x:Type Separator}">
			<Setter Property="Margin" Value="8,4"/>
			<Setter Property="Background" Value="{StaticResource Menu.Separator}"/>
		</Style>

		<!-- Menu item -->
		<Style x:Key="MenuItemStyle" TargetType="{x:Type ContentControl}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ContentControl}">
						<Grid x:Name="body"
							  Background="{StaticResource Menu.Item.Background.Normal}">
							<ContentPresenter Margin="{TemplateBinding Padding}"
											  Content="{TemplateBinding Content}"
											  ContentTemplate="{TemplateBinding ContentTemplate}"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Background" TargetName="body" Value="{StaticResource Menu.Item.Background.MouseOver}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!-- CheckBox -->
		<Style x:Key="CheckBoxItemStyle" TargetType="{x:Type CheckBox}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type CheckBox}">
						<Grid Background="Transparent"
							  Margin="{TemplateBinding Padding}"
							  SnapsToDevicePixels="True" UseLayoutRounding="True">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>
							<Grid Grid.Column="0"
								  Width="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}">
								<Polyline x:Name="checkMark"
										  Margin="3"
										  Points="0,5 4,9 12,0" Stretch="Uniform"
										  Stroke="{TemplateBinding Foreground}" StrokeThickness="1"
										  Opacity="0"/>
							</Grid>
							<ContentPresenter Grid.Column="1"
											  Margin="3" HorizontalAlignment="Left" VerticalAlignment="Center"
											  Focusable="False"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsChecked" Value="True">
								<Setter Property="Opacity" TargetName="checkMark" Value="1"/>
							</Trigger>
							<Trigger Property="IsChecked" Value="{x:Null}">
								<Setter Property="Opacity" TargetName="checkMark" Value="0"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!-- Close Button -->
		<Style x:Key="CloseButtonItemStyle" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid Background="Transparent"
							  Margin="{TemplateBinding Padding}"
							  SnapsToDevicePixels="True" UseLayoutRounding="True">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>
							<Grid Grid.Column="0"
								  Width="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}">
								<Path Margin="3"
									  Stretch="Uniform"
									  Stroke="{TemplateBinding Foreground}" StrokeThickness="1">
									<Path.Data>
										<GeometryGroup>
											<LineGeometry StartPoint="0,0" EndPoint="1,1"/>
											<LineGeometry StartPoint="0,1" EndPoint="1,0"/>
										</GeometryGroup>
									</Path.Data>
								</Path>
							</Grid>
							<ContentPresenter Grid.Column="1"
											  Margin="3" HorizontalAlignment="Left" VerticalAlignment="Center"
											  Focusable="False"/>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</Window.Resources>

	<Grid Background="{StaticResource App.Background}">
		<StackPanel Margin="0,4,0,4">
			<TextBlock HorizontalAlignment="Left"
					   Padding="8,2,8,2"
					   Foreground="{StaticResource App.Foreground}"
					   Text="{Binding Source={x:Static models:ProductInfo.Title}, Mode=OneTime}"/>
			<TextBlock Width="140" HorizontalAlignment="Left"
					   Padding="8,0,8,6"
					   Foreground="{StaticResource App.Foreground}">
			<Run Text="{Binding Source={x:Static models:ProductInfo.Version}, Mode=OneTime}"/>
			<Run Text="|"/>
			<Run Foreground="{StaticResource App.Foreground.Shadow}"
				 TextDecorations="Underline" Cursor="Hand"
				 Text="Site">
				<i:Interaction.Triggers>
					<i:EventTrigger EventName="MouseDown">
						<i:LaunchUriOrFileAction Path="{Binding Source={x:Static models:LanguageService.ProjectSite}, Mode=OneTime}"/>
					</i:EventTrigger>
				</i:Interaction.Triggers>
			</Run>
			<Run Text="|"/>
			<Run Foreground="{StaticResource App.Foreground.Shadow}"
				 TextDecorations="Underline" Cursor="Hand"
				 Text="License">
				<i:Interaction.Triggers>
					<i:EventTrigger EventName="MouseDown">
						<i:LaunchUriOrFileAction Path="{Binding Source={x:Static models:LanguageService.License}, Mode=OneTime}"/>
					</i:EventTrigger>
				</i:Interaction.Triggers>
			</Run>
			</TextBlock>

			<Separator Style="{StaticResource MenuSeparatorStyle}"/>

			<ContentControl Style="{StaticResource MenuItemStyle}">
				<CheckBox Padding="8,4"
						  Style="{StaticResource CheckBoxItemStyle}"
						  Foreground="{StaticResource App.Foreground}"
						  FontSize="13"
						  Content="{x:Static models:LanguageService.StartSignIn}"
						  IsChecked="{Binding IsRegistered, Mode=TwoWay}"
						  Visibility="{Binding CanRegister, Mode=OneTime, Converter={StaticResource BooleanToVisibilityConverterKey}}"/>
			</ContentControl>

			<Separator Style="{StaticResource MenuSeparatorStyle}"/>

			<!-- Close -->
			<ContentControl Style="{StaticResource MenuItemStyle}">
				<Button Padding="8,4"
						Style="{StaticResource CloseButtonItemStyle}"
						Foreground="{StaticResource App.Foreground}"
						FontSize="14"
						Content="{x:Static models:LanguageService.Close}"
						Command="{Binding CloseCommand, Mode=OneTime}"/>
			</ContentControl>
		</StackPanel>
	</Grid>
</Window>