<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

	<!-- Button -->
	<Style x:Key="NormalButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="{StaticResource Button.Foreground}"/>
		<Setter Property="BorderThickness" Value="2"/>
		<Setter Property="Foreground" Value="{StaticResource Button.Foreground}"/>
		<Setter Property="FontSize" Value="13"/>
		<Setter Property="FontWeight" Value="SemiBold"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Border x:Name="border"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								SnapsToDevicePixels="True" UseLayoutRounding="True">
							<ContentPresenter x:Name="contentPresenter"
											  Margin="{TemplateBinding Padding}"
											  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
											  Content="{TemplateBinding Content}"/>
						</Border>

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="border"
														 Storyboard.TargetProperty="(Control.BorderBrush).(SolidColorBrush.Opacity)"
														 To="1.0"
														 Duration="0:0:0.1"/>
										<DoubleAnimation Storyboard.TargetName="border"
														 Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Opacity)"
														 To="1.0"
														 Duration="0:0:0.1"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="border"
														 Storyboard.TargetProperty="(Control.BorderBrush).(SolidColorBrush.Opacity)"
														 To="1.0"
														 Duration="0:0:0.1"/>
										<DoubleAnimation Storyboard.TargetName="border"
														 Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Opacity)"
														 To="1.0"
														 Duration="0:0:0.1"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="border"
														 Storyboard.TargetProperty="(Control.BorderBrush).(SolidColorBrush.Opacity)"
														 To="0.4"
														 Duration="0:0:0"/>
										<DoubleAnimation Storyboard.TargetName="border"
														 Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Opacity)"
														 To="0.4"
														 Duration="0:0:0"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="MenuButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="Background" Value="{StaticResource ToggleButton.Background.Normal}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Foreground" Value="{StaticResource ToggleButton.Foreground.Normal}"/>
		<Setter Property="FontSize" Value="12"/>
		<Setter Property="FontWeight" Value="SemiBold"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Border x:Name="border"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								SnapsToDevicePixels="True" UseLayoutRounding="True">
							<ContentPresenter x:Name="contentPresenter"
											  Margin="{TemplateBinding Padding}"
											  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
											  Content="{TemplateBinding Content}"/>
						</Border>

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="border"
														 Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Opacity)"
														 To="0.8"
														 Duration="0:0:0.1"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="border"
														 Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Opacity)"
														 To="1.0"
														 Duration="0:0:0.1"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="border"
														Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
														To="{StaticResource ToggleButton.Background.CheckedColor}"
														Duration="0:0:0.1"/>
										<DoubleAnimation Storyboard.TargetName="border"
														 Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Opacity)"
														 To="1.0"
														 Duration="0:0:0.1"/>
										<DoubleAnimation Storyboard.TargetName="border"
														 Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Opacity)"
														 To="0.8"
														 Duration="0:0:0.1"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ActionButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="{StaticResource Button.Foreground}"/>
		<Setter Property="BorderThickness" Value="2"/>
		<Setter Property="Foreground" Value="{StaticResource Button.Foreground}"/>
		<Setter Property="FontSize" Value="12"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Border x:Name="border"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								SnapsToDevicePixels="True" UseLayoutRounding="True">
							<ContentPresenter x:Name="contentPresenter"
											  Margin="{TemplateBinding Padding}"
											  Content="{TemplateBinding Content}"/>
						</Border>

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="border"
														 Storyboard.TargetProperty="(Control.BorderBrush).(SolidColorBrush.Opacity)"
														 To="1.0"
														 Duration="0:0:0.1"/>
										<DoubleAnimation Storyboard.TargetName="border"
														 Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Opacity)"
														 To="1.0"
														 Duration="0:0:0.1"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="border"
														 Storyboard.TargetProperty="(Control.BorderBrush).(SolidColorBrush.Opacity)"
														 To="1.0"
														 Duration="0:0:0.1"/>
										<DoubleAnimation Storyboard.TargetName="border"
														 Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Opacity)"
														 To="1.0"
														 Duration="0:0:0.1"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="border"
														 Storyboard.TargetProperty="(Control.BorderBrush).(SolidColorBrush.Opacity)"
														 To="0.4"
														 Duration="0:0:0"/>
										<DoubleAnimation Storyboard.TargetName="border"
														 Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Opacity)"
														 To="0.4"
														 Duration="0:0:0"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- TextBox -->
	<Style x:Key="NameTextBoxStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
		<Setter Property="CaretBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Foreground}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBox}">
					<Border x:Name="border"
							BorderBrush="Transparent" BorderThickness="1"
							Background="Transparent"
							SnapsToDevicePixels="True">
						<ScrollViewer x:Name="PART_ContentHost"
									  VerticalScrollBarVisibility="Hidden"
									  Focusable="False"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsReadOnly" Value="False">
							<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Text.Border.Writable}"/>
							<Setter Property="Background" TargetName="border" Value="{StaticResource Text.Background.Writable}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- CheckBox -->
	<Style x:Key="ItemCheckBoxStyle" TargetType="{x:Type CheckBox}">
		<Setter Property="Foreground" Value="{StaticResource Button.Foreground}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type CheckBox}">
					<Grid Background="Transparent"
							  Margin="{TemplateBinding Padding}"
							  SnapsToDevicePixels="True" UseLayoutRounding="True">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="*"/>
						</Grid.RowDefinitions>

						<Border Grid.Row="1"
								x:Name="checkMark"
								BorderBrush="{TemplateBinding Foreground}" BorderThickness="0,0,0,2"
								Opacity="0"/>

						<ContentPresenter Grid.Column="1" Grid.Row="0"
										  x:Name="content"
										  Margin="4,2" HorizontalAlignment="Left" VerticalAlignment="Center"
										  Focusable="False"
										  Opacity="0.6"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="Opacity" TargetName="content" Value="1"/>
							<Setter Property="Opacity" TargetName="checkMark" Value="1"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="{x:Null}">
							<Setter Property="Opacity" TargetName="content" Value="0.6"/>
							<Setter Property="Opacity" TargetName="checkMark" Value="0"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- ScrollBar -->
	<SolidColorBrush x:Key="ScrollBar.Background.Static" Color="{StaticResource ScrollBar.Background.NormalColor}"/>
	<SolidColorBrush x:Key="ScrollBar.Background.MouseOver" Color="{StaticResource ScrollBar.Background.MouseOverColor}"/>
	<SolidColorBrush x:Key="ScrollBar.Background.Pressed" Color="{StaticResource ScrollBar.Background.MouseOverColor}"/>
	<SolidColorBrush x:Key="ScrollBar.Background.Disabled" Color="{StaticResource ScrollBar.Background.NormalColor}"/>

	<SolidColorBrush x:Key="ScrollBar.Thumb.Static" Color="{StaticResource ScrollBar.Thumb.NormalColor}"/>
	<SolidColorBrush x:Key="ScrollBar.Thumb.MouseOver" Color="{StaticResource ScrollBar.Thumb.MouseOverColor}"/>
	<SolidColorBrush x:Key="ScrollBar.Thumb.Pressed" Color="{StaticResource ScrollBar.Thumb.MouseOverColor}"/>
	<SolidColorBrush x:Key="ScrollBar.Thumb.Disabled" Color="{StaticResource ScrollBar.Thumb.NormalColor}"/>

	<SolidColorBrush x:Key="ScrollBar.Glyph.Static" Color="#BABABA"/>
	<SolidColorBrush x:Key="ScrollBar.Glyph.MouseOver" Color="#000000"/>
	<SolidColorBrush x:Key="ScrollBar.Glyph.Pressed" Color="#FFFFFF"/>
	<SolidColorBrush x:Key="ScrollBar.Glyph.Disabled" Color="#BFBFBF"/>

	<Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Border x:Name="border"
							BorderBrush="{StaticResource ScrollBar.Background.Static}"
							BorderThickness="1"
							Background="{StaticResource ScrollBar.Background.Static}"
							SnapsToDevicePixels="True" UseLayoutRounding="True">
						<ContentPresenter x:Name="contentPresenter"
										  Margin="{TemplateBinding Padding}"
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
										  Focusable="False"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="border" Property="Background" Value="{StaticResource ScrollBar.Background.MouseOver}"/>
							<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ScrollBar.Background.MouseOver}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="border" Property="Background" Value="{StaticResource ScrollBar.Background.Pressed}"/>
							<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ScrollBar.Background.Pressed}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="contentPresenter" Property="Opacity" Value="0.56"/>
							<Setter TargetName="border" Property="Background" Value="{StaticResource ScrollBar.Background.Disabled}"/>
							<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ScrollBar.Background.Disabled}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ScrollBarTrackButton" TargetType="{x:Type RepeatButton}">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Rectangle Width="{TemplateBinding Width}"
							   Height="{TemplateBinding Height}"
							   Fill="Transparent"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ScrollBarTrackThumb" TargetType="{x:Type Thumb}">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Rectangle x:Name="rectangle"
							   Width="{TemplateBinding Width}"
							   Height="{TemplateBinding Height}"
							   Fill="{StaticResource ScrollBar.Thumb.Static}"
							   SnapsToDevicePixels="True" UseLayoutRounding="True"/>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="rectangle" Property="Fill" Value="{StaticResource ScrollBar.Thumb.MouseOver}"/>
						</Trigger>
						<Trigger Property="IsDragging" Value="True">
							<Setter TargetName="rectangle" Property="Fill" Value="{StaticResource ScrollBar.Thumb.Pressed}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type ScrollBar}">
		<Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
		<Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
		<Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
		<Setter Property="BorderBrush" Value="{StaticResource ScrollBar.Background.Static}"/>
		<Setter Property="BorderThickness" Value="1,0"/>		
		<Setter Property="Background" Value="{StaticResource ScrollBar.Background.Static}"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollBar}">
					<Grid SnapsToDevicePixels="True">
						<Grid.RowDefinitions>
							<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
							<RowDefinition Height="0.00001*"/>
							<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
						</Grid.RowDefinitions>
						<RepeatButton Grid.Row="0"
									  x:Name="PART_LineUpButton"
									  Style="{StaticResource ScrollBarButton}"
									  IsEnabled="{TemplateBinding IsMouseOver}"
									  Command="{x:Static ScrollBar.LineUpCommand}">
							<Path x:Name="ArrowTop"
								  Data="M 0,4 C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4 z"
								  Stretch="Uniform"
								  Margin="3,4,3,3"
								  Fill="{StaticResource ScrollBar.Glyph.Static}"/>
						</RepeatButton>
						<Border Grid.Row="1"
								Background="{TemplateBinding Background}"/>
						<Track Grid.Row="1"
							   x:Name="PART_Track"
							   IsDirectionReversed="True"
							   IsEnabled="{TemplateBinding IsMouseOver}">
							<Track.DecreaseRepeatButton>
								<RepeatButton Style="{StaticResource ScrollBarTrackButton}"
											  Command="{x:Static ScrollBar.PageUpCommand}"/>
							</Track.DecreaseRepeatButton>
							<Track.IncreaseRepeatButton>
								<RepeatButton Style="{StaticResource ScrollBarTrackButton}"
											  Command="{x:Static ScrollBar.PageDownCommand}"/>
							</Track.IncreaseRepeatButton>
							<Track.Thumb>
								<Thumb Style="{StaticResource ScrollBarTrackThumb}"/>
							</Track.Thumb>
						</Track>
						<RepeatButton Grid.Row="2"
									  x:Name="PART_LineDownButton"
									  Style="{StaticResource ScrollBarButton}"
									  IsEnabled="{TemplateBinding IsMouseOver}"
									  Command="{x:Static ScrollBar.LineDownCommand}">
							<Path x:Name="ArrowBottom"
								  Data="M 0,2.5 C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5 z"
								  Stretch="Uniform"
								  Margin="3,4,3,3"
								  Fill="{StaticResource ScrollBar.Glyph.Static}"/>
						</RepeatButton>
					</Grid>
					<ControlTemplate.Triggers>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding ElementName=PART_LineDownButton, Path=IsMouseOver}" Value="True"/>
								<Condition Binding="{Binding ElementName=PART_LineDownButton, Path=IsPressed}" Value="True"/>
							</MultiDataTrigger.Conditions>
							<Setter TargetName="ArrowBottom" Property="Fill" Value="{StaticResource ScrollBar.Glyph.Pressed}"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding ElementName=PART_LineUpButton, Path=IsMouseOver}" Value="True"/>
								<Condition Binding="{Binding ElementName=PART_LineUpButton, Path=IsPressed}" Value="True"/>
							</MultiDataTrigger.Conditions>
							<Setter TargetName="ArrowTop" Property="Fill" Value="{StaticResource ScrollBar.Glyph.Pressed}"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding ElementName=PART_LineDownButton, Path=IsMouseOver}" Value="True"/>
								<Condition Binding="{Binding ElementName=PART_LineDownButton, Path=IsPressed}" Value="False"/>
							</MultiDataTrigger.Conditions>
							<Setter TargetName="ArrowBottom" Property="Fill" Value="{StaticResource ScrollBar.Glyph.MouseOver}"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding ElementName=PART_LineUpButton, Path=IsMouseOver}" Value="True"/>
								<Condition Binding="{Binding ElementName=PART_LineUpButton, Path=IsPressed}" Value="False"/>
							</MultiDataTrigger.Conditions>
							<Setter TargetName="ArrowTop" Property="Fill" Value="{StaticResource ScrollBar.Glyph.MouseOver}"/>
						</MultiDataTrigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="ArrowTop" Property="Fill" Value="{StaticResource ScrollBar.Glyph.Disabled}"/>
							<Setter TargetName="ArrowBottom" Property="Fill" Value="{StaticResource ScrollBar.Glyph.Disabled}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="Orientation" Value="Horizontal">
				<Setter Property="Width" Value="Auto"/>
				<Setter Property="MinWidth" Value="0"/>
				<Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
				<Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
				<Setter Property="BorderThickness" Value="0,1"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ScrollBar}">
							<Grid SnapsToDevicePixels="True">
								<Grid.ColumnDefinitions>
									<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
									<ColumnDefinition Width="0.00001*"/>
									<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
								</Grid.ColumnDefinitions>
								<RepeatButton Grid.Row="0"
											  x:Name="PART_LineLeftButton"
											  Style="{StaticResource ScrollBarButton}"
											  IsEnabled="{TemplateBinding IsMouseOver}"
											  Command="{x:Static ScrollBar.LineLeftCommand}">
									<Path x:Name="ArrowLeft"
										  Data="M 3.18,7 C3.18,7 5,7 5,7 5,7 1.81,3.5 1.81,3.5 1.81,3.5 5,0 5,0 5,0 3.18,0 3.18,0 3.18,0 0,3.5 0,3.5 0,3.5 3.18,7 3.18,7 z"
										  Stretch="Uniform"
										  Margin="3"
										  Fill="{StaticResource ScrollBar.Glyph.Static}"/>
								</RepeatButton>
								<Border Grid.Row="1"
										Background="{TemplateBinding Background}"/>
								<Track Grid.Column="1"
									   x:Name="PART_Track"
									   IsEnabled="{TemplateBinding IsMouseOver}">
									<Track.DecreaseRepeatButton>
										<RepeatButton Style="{StaticResource ScrollBarTrackButton}"
													  Command="{x:Static ScrollBar.PageLeftCommand}"/>
									</Track.DecreaseRepeatButton>
									<Track.IncreaseRepeatButton>
										<RepeatButton Style="{StaticResource ScrollBarTrackButton}"
													  Command="{x:Static ScrollBar.PageRightCommand}"/>
									</Track.IncreaseRepeatButton>
									<Track.Thumb>
										<Thumb Style="{StaticResource ScrollBarTrackThumb}"/>
									</Track.Thumb>
								</Track>
								<RepeatButton Grid.Column="2"
											  x:Name="PART_LineRightButton"
											  Style="{StaticResource ScrollBarButton}"
											  IsEnabled="{TemplateBinding IsMouseOver}"
											  Command="{x:Static ScrollBar.LineRightCommand}">
									<Path x:Name="ArrowRight"
										  Data="M 1.81,7 C1.81,7 0,7 0,7 0,7 3.18,3.5 3.18,3.5 3.18,3.5 0,0 0,0 0,0 1.81,0 1.81,0 1.81,0 5,3.5 5,3.5 5,3.5 1.81,7 1.81,7 z"
										  Stretch="Uniform"
										  Margin="3"
										  Fill="{StaticResource ScrollBar.Glyph.Static}"/>
								</RepeatButton>
							</Grid>
							<ControlTemplate.Triggers>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Binding="{Binding ElementName=PART_LineRightButton, Path=IsMouseOver}" Value="True"/>
										<Condition Binding="{Binding ElementName=PART_LineRightButton, Path=IsPressed}" Value="True"/>
									</MultiDataTrigger.Conditions>
									<Setter TargetName="ArrowRight" Property="Fill" Value="{StaticResource ScrollBar.Glyph.Pressed}"/>
								</MultiDataTrigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Binding="{Binding ElementName=PART_LineLeftButton, Path=IsMouseOver}" Value="True"/>
										<Condition Binding="{Binding ElementName=PART_LineLeftButton, Path=IsPressed}" Value="True"/>
									</MultiDataTrigger.Conditions>
									<Setter TargetName="ArrowLeft" Property="Fill" Value="{StaticResource ScrollBar.Glyph.Pressed}"/>
								</MultiDataTrigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Binding="{Binding ElementName=PART_LineRightButton, Path=IsMouseOver}" Value="True"/>
										<Condition Binding="{Binding ElementName=PART_LineRightButton, Path=IsPressed}" Value="False"/>
									</MultiDataTrigger.Conditions>
									<Setter TargetName="ArrowRight" Property="Fill" Value="{StaticResource ScrollBar.Glyph.MouseOver}"/>
								</MultiDataTrigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Binding="{Binding ElementName=PART_LineLeftButton, Path=IsMouseOver}" Value="True"/>
										<Condition Binding="{Binding ElementName=PART_LineLeftButton, Path=IsPressed}" Value="False"/>
									</MultiDataTrigger.Conditions>
									<Setter TargetName="ArrowLeft" Property="Fill" Value="{StaticResource ScrollBar.Glyph.MouseOver}"/>
								</MultiDataTrigger>
								<Trigger Property="IsEnabled" Value="False">
									<Setter TargetName="ArrowLeft" Property="Fill" Value="{StaticResource ScrollBar.Glyph.Disabled}"/>
									<Setter TargetName="ArrowRight" Property="Fill" Value="{StaticResource ScrollBar.Glyph.Disabled}"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>

</ResourceDictionary>