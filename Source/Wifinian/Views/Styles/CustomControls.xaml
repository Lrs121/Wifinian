<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:sys="clr-namespace:System;assembly=mscorlib"
					xmlns:controls="clr-namespace:Wifinian.Views.Controls">

	<!-- SignalProgressBar -->
	<Style x:Key="BarStyle" TargetType="{x:Type controls:SignalProgressBar}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:SignalProgressBar}">
					<Canvas Width="19" Height="16"
							RenderOptions.EdgeMode="Aliased">
						<Rectangle x:Name="PART_LevelOne"
								   Canvas.Left="0" Canvas.Top="12" Width="3" Height="4"
								   Fill="DarkGray"/>
						<Rectangle x:Name="PART_LevelTwo"
								   Canvas.Left="4" Canvas.Top="9" Width="3" Height="7"
								   Fill="DarkGray"/>
						<Rectangle x:Name="PART_LevelThree"
								   Canvas.Left="8" Canvas.Top="6" Width="3" Height="10"
								   Fill="DarkGray"/>
						<Rectangle x:Name="PART_LevelFour"
								   Canvas.Left="12" Canvas.Top="3" Width="3" Height="13"
								   Fill="DarkGray"/>
						<Rectangle x:Name="PART_LevelFive"
								   Canvas.Left="16" Canvas.Top="0" Width="3" Height="16"
								   Fill="DarkGray"/>
					</Canvas>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- MovingButton -->
	<Style x:Key="RollingStyle" TargetType="{x:Type controls:MovingButton}">
		<Style.Resources>
			<!-- Width:100, Height:120, Center of rolling:50,70 -->
			<GeometryGroup x:Key="UpdateForm"
						   FillRule="Nonzero">
				<CombinedGeometry GeometryCombineMode="Exclude">
					<CombinedGeometry.Geometry1>
						<GeometryGroup FillRule="EvenOdd">
							<EllipseGeometry RadiusX="50" RadiusY="50" Center="50,70"/>
							<EllipseGeometry RadiusX="35" RadiusY="35" Center="50,70"/>
						</GeometryGroup>
					</CombinedGeometry.Geometry1>
					<CombinedGeometry.Geometry2>
						<RectangleGeometry Rect="51,12.8,50,50"/>
					</CombinedGeometry.Geometry2>
				</CombinedGeometry>
				<PathGeometry Figures="M50.0,0.0 L77.3,27.3 L50.0,54.6 z"/>
			</GeometryGroup>

			<Duration x:Key="MovingDuration">0:0:0.6</Duration>
		</Style.Resources>

		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Foreground" Value="{StaticResource App.Foreground}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:MovingButton}">
					<Grid>
						<Grid x:Name="container"
							  Margin="2.1"
							  Background="{TemplateBinding Background}"
							  Opacity="0.8"
							  RenderTransformOrigin="0.5 0.5">
							<Grid.RowDefinitions>
								<RowDefinition Height="120*"/>
								<!-- Margin to adjust center of rolling -->
								<RowDefinition Height="20*"/>
							</Grid.RowDefinitions>

							<Path Fill="{TemplateBinding Foreground}"
								  Data="{StaticResource UpdateForm}"
								  Stretch="Uniform"/>

							<Grid.RenderTransform>
								<RotateTransform Angle="0"/>
							</Grid.RenderTransform>
						</Grid>

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="container"
														 Storyboard.TargetProperty="(UIElement.Opacity)"
														 To="1.0"
														 Duration="0:0:0.1"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="container"
														 Storyboard.TargetProperty="(UIElement.Opacity)"
														 To="1.0"
														 Duration="0:0:0.1"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="container"
														 Storyboard.TargetProperty="(UIElement.Opacity)"
														 To="0.6"
														 Duration="0:0:0.1"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="MovingStates">
								<VisualState x:Name="MovingOff"/>
								<VisualState x:Name="MovingOn">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="container"
														 Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
														 From="0" To="360"
														 RepeatBehavior="1x"
														 Duration="{StaticResource MovingDuration}"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- MovingControl -->
	<Style x:Key="BubbleStyle" TargetType="{x:Type controls:MovingControl}">
		<Style.Resources>
			<!-- Margin.Start = (Diameter.End - Diameter.Start) / 2 -->
			<sys:Double x:Key="Diameter.Start">20</sys:Double>
			<sys:Double x:Key="Diameter.End">200</sys:Double>
			<sys:Double x:Key="Margin.Start">90</sys:Double>
			<sys:Double x:Key="Margin.End">0</sys:Double>
			<sys:Double x:Key="Stroke.Start">4</sys:Double>
			<sys:Double x:Key="Stroke.End">2</sys:Double>
			<Duration x:Key="MovingDuration">0:0:1.2</Duration>
		</Style.Resources>

		<Setter Property="Foreground" Value="{StaticResource App.Foreground}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:MovingControl}">
					<Grid>
						<Canvas Width="{StaticResource Diameter.End}" Height="{StaticResource Diameter.End}"
								IsHitTestVisible="False">
							<Ellipse x:Name="circle"
									 Opacity="0"
									 Width="{StaticResource Diameter.Start}" Height="{StaticResource Diameter.Start}"
									 Canvas.Left="{StaticResource Margin.Start}" Canvas.Top="{StaticResource Margin.Start}"
									 Stroke="{TemplateBinding Foreground}"
									 StrokeThickness="{StaticResource Stroke.Start}"/>
						</Canvas>

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="MovingStates">
								<VisualState x:Name="MovingOff"/>
								<VisualState x:Name="MovingOn">
									<Storyboard>
										<DoubleAnimation
											Storyboard.TargetName="circle"
											Storyboard.TargetProperty="(UIElement.Opacity)"
											Duration="{StaticResource MovingDuration}"
											From="1" To="0"/>
										<DoubleAnimation
											Storyboard.TargetName="circle"
											Storyboard.TargetProperty="(FrameworkElement.Width)"
											Duration="{StaticResource MovingDuration}"
											From="{StaticResource Diameter.Start}" To="{StaticResource Diameter.End}"/>
										<DoubleAnimation
											Storyboard.TargetName="circle"
											Storyboard.TargetProperty="(FrameworkElement.Height)"
											Duration="{StaticResource MovingDuration}"
											From="{StaticResource Diameter.Start}" To="{StaticResource Diameter.End}"/>
										<DoubleAnimation
											Storyboard.TargetName="circle"
											Storyboard.TargetProperty="(Canvas.Left)"
											Duration="{StaticResource MovingDuration}"
											From="{StaticResource Margin.Start}" To="{StaticResource Margin.End}"/>
										<DoubleAnimation
											Storyboard.TargetName="circle"
											Storyboard.TargetProperty="(Canvas.Top)"
											Duration="{StaticResource MovingDuration}"
											From="{StaticResource Margin.Start}" To="{StaticResource Margin.End}"/>
										<DoubleAnimation
											Storyboard.TargetName="circle"
											Storyboard.TargetProperty="(Shape.StrokeThickness)"
											Duration="{StaticResource MovingDuration}"
											From="{StaticResource Stroke.Start}" To="{StaticResource Stroke.End}"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- ProfileContentControl -->
	<Style TargetType="{x:Type controls:ProfileContentControl}">
		<Setter Property="Background" Value="{StaticResource Profile.Normal.Background}"/>
		<Setter Property="BorderBrush" Value="{StaticResource App.Background}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Foreground" Value="{StaticResource App.Foreground}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:ProfileContentControl}">
					<Grid>
						<Border x:Name="border"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								SnapsToDevicePixels="True"
								UseLayoutRounding="True">
							<ContentPresenter x:Name="contentPresenter"
											  Margin="{TemplateBinding Padding}"
											  Content="{TemplateBinding Content}"
											  ContentTemplate="{TemplateBinding ContentTemplate}"/>
						</Border>

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="NormalSelected">
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="border"
														Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
														To="{DynamicResource Profile.Normal.Selected.BackgroundColor}"
														Duration="0:0:0.1"/>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Available">
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="border"
														Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
														To="{StaticResource Profile.Available.BackgroundColor}"
														Duration="0:0:0.1"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="AvailableSelected">
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="border"
														Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
														To="{DynamicResource Profile.Available.Selected.BackgroundColor}"
														Duration="0:0:0.1"/>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Connected">
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="border"
														Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
														To="{StaticResource Profile.Connected.BackgroundColor}"
														Duration="0:0:0.1"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="ConnectedSelected">
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="border"
														Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
														To="{DynamicResource Profile.Connected.Selected.BackgroundColor}"
														Duration="0:0:0.1"/>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="ConfigMode">
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="border"
														Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
														To="{StaticResource Profile.ConfigMode.BackgroundColor}"
														Duration="0:0:0.1"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="ConfigModeSelected">
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="border"
														Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
														To="{DynamicResource Profile.ConfigMode.Selected.BackgroundColor}"
														Duration="0:0:0.1"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- PlainToggleButton -->
	<Style x:Key="MenuToggleButtonStyle" TargetType="{x:Type controls:PlainToggleButton}">
		<Setter Property="Background" Value="{StaticResource App.Background}"/>
		<Setter Property="BorderBrush" Value="{StaticResource ToggleButton.Normal.Foreground}"/>
		<Setter Property="BorderThickness" Value="2"/>
		<Setter Property="Foreground" Value="{StaticResource ToggleButton.Normal.Foreground}"/>
		<Setter Property="FontSize" Value="12"/>
		<Setter Property="FontWeight" Value="SemiBold"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:PlainToggleButton}">
					<Grid>
						<Border x:Name="border"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								SnapsToDevicePixels="True"
								UseLayoutRounding="True">
							<ContentPresenter x:Name="contentPresenter"
											  Margin="{TemplateBinding Padding}"
											  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
											  Content="{TemplateBinding Content}"/>
						</Border>

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="border"
														 Storyboard.TargetProperty="(Control.BorderBrush).(SolidColorBrush.Opacity)"
														 To="0.8"
														 Duration="0:0:0.1"/>
										<DoubleAnimation Storyboard.TargetName="border"
														 Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Opacity)"
														 To="0.8"
														 Duration="0:0:0.1"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="border"
														 Storyboard.TargetProperty="(Control.BorderBrush).(SolidColorBrush.Opacity)"
														 To="0.9"
														 Duration="0:0:0.1"/>
										<DoubleAnimation Storyboard.TargetName="border"
														 Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Opacity)"
														 To="0.9"
														 Duration="0:0:0.1"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="border"
														 Storyboard.TargetProperty="(Control.BorderBrush).(SolidColorBrush.Opacity)"
														 To="0.4"
														 Duration="0:0:0"/>
										<DoubleAnimation Storyboard.TargetName="border"
														 Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Opacity)"
														 To="0.4"
														 Duration="0:0:0"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Checked">
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="border"
														Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
														To="{StaticResource ToggleButton.Checked.ForegroundColor}"
														Duration="0:0:0.1"/>
										<DoubleAnimation Storyboard.TargetName="border"
														 Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Opacity)"
														 To="1.0"
														 Duration="0:0:0.1"/>
										<ColorAnimation Storyboard.TargetName="border"
														Storyboard.TargetProperty="(Control.BorderBrush).(SolidColorBrush.Color)"
														To="{StaticResource ToggleButton.Checked.ForegroundColor}"
														Duration="0:0:0.1"/>
										<DoubleAnimation Storyboard.TargetName="border"
														 Storyboard.TargetProperty="(Control.BorderBrush).(SolidColorBrush.Opacity)"
														 To="1.0"
														 Duration="0:0:0.1"/>
										<ColorAnimation Storyboard.TargetName="border"
														Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
														To="{StaticResource App.BackgroundColor}"
														Duration="0:0:0.1"/>
										<DoubleAnimation Storyboard.TargetName="border"
														 Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Opacity)"
														 To="1.0"
														 Duration="0:0:0.1"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<PathGeometry x:Key="ArrowForm"
				  Figures="M 0,60 L50,10 100,60 100,88 50,38, 0,88 z"/>

	<Style x:Key="ArrowToggleButtonStyle" TargetType="{x:Type controls:PlainToggleButton}">
		<Setter Property="Width" Value="12"/>
		<Setter Property="Height" Value="12"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:PlainToggleButton}">
					<Grid>
						<Border x:Name="border"
								Background="Transparent"
								BorderBrush="Transparent"
								BorderThickness="0"
								SnapsToDevicePixels="True"
								UseLayoutRounding="True">
							<Path x:Name="arrow"
								  Margin="2"
								  Data="{StaticResource ArrowForm}"
								  Stretch="Uniform"
								  Fill="{StaticResource ToggleButton.Normal.Foreground}"
								  RenderTransformOrigin="0.5 0.5">
								<Path.RenderTransform>
									<ScaleTransform ScaleY="-1"/>
								</Path.RenderTransform>
							</Path>
						</Border>

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="arrow"
														 Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Opacity)"
														 To="0.8"
														 Duration="0:0:0.1"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="arrow"
														 Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Opacity)"
														 To="0.9"
														 Duration="0:0:0.1"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="arrow"
														 Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Opacity)"
														 To="0.4"
														 Duration="0:0:0"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Checked">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="arrow"
														 Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Opacity)"
														 To="1.0"
														 Duration="0:0:0.1"/>
										<DoubleAnimation Storyboard.TargetName="arrow"
														 Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
														 To="1"
														 Duration="0:0:0.1"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>