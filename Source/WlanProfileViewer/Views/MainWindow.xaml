<Window x:Class="WlanProfileViewer.Views.MainWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
		xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
		xmlns:models="clr-namespace:WlanProfileViewer.Models"
		xmlns:viewModels="clr-namespace:WlanProfileViewer.ViewModels"
		xmlns:views="clr-namespace:WlanProfileViewer.Views"
		xmlns:behaviors="clr-namespace:WlanProfileViewer.Views.Behaviors"
		xmlns:controls="clr-namespace:WlanProfileViewer.Views.Controls"
		Title="{Binding Source={x:Static models:ProductInfo.Title}, Mode=OneTime}"
		Width="500"
		Height="400" MinHeight="200" ResizeMode="CanResize"
		Background="{StaticResource App.Background}"
		AllowsTransparency="True" WindowStyle="None">
	<WindowChrome.WindowChrome>
		<WindowChrome CaptionHeight="0"
					  ResizeBorderThickness="0,4"/>
	</WindowChrome.WindowChrome>

	<Grid>
		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="*"/>
			</Grid.RowDefinitions>

			<StackPanel Grid.Row="0">
				<Grid Margin="0,4,0,6">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="44"/>
						<ColumnDefinition Width="92"/>
						<ColumnDefinition Width="30"/>
						<ColumnDefinition Width="12"/>
						<ColumnDefinition Width="92"/>
						<ColumnDefinition Width="30"/>
						<ColumnDefinition Width="12"/>
						<ColumnDefinition Width="72"/>
						<ColumnDefinition Width="*"/>
					</Grid.ColumnDefinitions>

					<!-- Rescan -->
					<controls:MovingButton
						Grid.Column="0"
						x:Name="RescanButton"
						Width="30" Height="30"
						Style="{StaticResource RollingStyle}"
						IsRunning="{Binding IsUpdating.Value}"
						Command="{Binding RescanCommand}"/>

					<!-- Quick Rescan -->
					<controls:PlainToggleButton
						Grid.Column="1"
						Height="24"
						Style="{StaticResource MenuToggleButtonStyle}"
						Content="Quick Rescan"
						IsChecked="{Binding IsQuickRescanEnabled.Value, Mode=TwoWay}"/>

					<Button Grid.Column="2"
							Height="24"
							Style="{StaticResource MenuButtonStyle}"
							Content="{Binding Source={x:Static models:Settings.Current}, Path=RescanInterval, Mode=OneWay}">
						<i:Interaction.Triggers>
							<i:EventTrigger EventName="Click">
								<ei:CallMethodAction TargetObject="{Binding Source={x:Static models:Settings.Current}}"
													 MethodName="IncrementRescanInterval"/>
							</i:EventTrigger>
						</i:Interaction.Triggers>
					</Button>

					<!-- Active Priority -->
					<controls:PlainToggleButton
						Grid.Column="4"
						Height="24"
						Style="{StaticResource MenuToggleButtonStyle}"
						Content="Active Priority"
						IsChecked="{Binding IsActivePriorityEnabled.Value, Mode=TwoWay}"/>

					<Button Grid.Column="5"
							Height="24"
							Style="{StaticResource MenuButtonStyle}"
							Content="{Binding Source={x:Static models:Settings.Current}, Path=SignalThreshold, Mode=OneWay}">
						<i:Interaction.Triggers>
							<i:EventTrigger EventName="Click">
								<ei:CallMethodAction TargetObject="{Binding Source={x:Static models:Settings.Current}}"
													 MethodName="IncrementSignalThreshold"/>
							</i:EventTrigger>
						</i:Interaction.Triggers>
					</Button>
					
					<!-- Config -->
					<controls:PlainToggleButton
						Grid.Column="7"
						Height="24"
						Style="{StaticResource MenuToggleButtonStyle}"
						Content="Config"
						IsChecked="{Binding IsConfigMode.Value, Mode=TwoWay}"/>
				</Grid>
			</StackPanel>

			<ListView Grid.Row="1"
					  ItemsSource="{Binding ProfilesView}"
					  SelectionMode="Multiple"
					  IsSynchronizedWithCurrentItem="False">
				<ListView.Template>
					<ControlTemplate TargetType="{x:Type ListView}">
						<Border BorderThickness="0">
							<ScrollViewer CanContentScroll="False"
										  HorizontalScrollBarVisibility="Disabled"
										  VerticalScrollBarVisibility="Auto">
								<VirtualizingStackPanel IsItemsHost="True"/>
							</ScrollViewer>
						</Border>
					</ControlTemplate>
				</ListView.Template>
				<ListView.ItemTemplate>
					<DataTemplate>
						<controls:ProfileContentControl
							IsSelected="{Binding IsSelected.Value}"
							IsAvailable="{Binding IsAvailable.Value}"
							IsConnected="{Binding IsConnected.Value}"
							IsConfigMode="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.IsConfigMode.Value}">
							<StackPanel>
								<Grid Height="30">
									<Grid Margin="4,0">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="24"/>
											<ColumnDefinition Width="*"/>
										</Grid.ColumnDefinitions>

										<!-- Signal -->
										<controls:SignalProgressBar
											Grid.Column="0"
											Style="{StaticResource BarStyle}"
											Background="{StaticResource Profile.Signal.Background}"
											Foreground="{StaticResource Profile.Signal.Foreground}"
											Value="{Binding Signal.Value, Mode=OneWay}">
											<Control.ToolTip>
												<ToolTip DataContext="{Binding PlacementTarget, RelativeSource={RelativeSource Self}}"
														 Content="{Binding Value}"
														 ContentStringFormat="{} {0}%"/>
											</Control.ToolTip>
										</controls:SignalProgressBar>

										<!-- Profile name -->
										<TextBlock Grid.Column="1"
												   Margin="4,0,0,0" VerticalAlignment="Center"
												   Foreground="{StaticResource App.Foreground}"
												   FontSize="14"
												   Text="{Binding Name, Mode=OneTime}"/>
									</Grid>

									<!-- Connected -->
									<TextBlock Margin="0,0,6,0" HorizontalAlignment="Right" VerticalAlignment="Center"
											   Foreground="{StaticResource App.Foreground}"
											   FontWeight="Bold"
											   Text="Connected"
											   Visibility="{Binding IsConnected.Value, Converter={StaticResource BooleanToVisibilityConverterKey}}"/>
								</Grid>

								<!-- Supplement -->
								<TextBlock Margin="32,0,0,6"
										   Foreground="{StaticResource App.Foreground.Supplement}"
										   FontSize="12">
									<Run Text="{Binding InterfaceDescription, Mode=OneTime}"/>
									<LineBreak/>
									<Run Text="{Binding Authentication, Mode=OneTime}"/>
									<Run Text="{Binding Encryption, Mode=OneTime, StringFormat=[{0}]}"/>
									<Run Text="| Auto Connect:"/>
									<Run Text="{Binding IsAutoConnectEnabled.Value, Mode=OneWay}"/>
									<Run Text="| Auto Switch:"/>
									<Run Text="{Binding IsAutoSwitchEnabled.Value, Mode=OneWay}"/>
								</TextBlock>

								<Grid Margin="32,2,0,6"
									  Visibility="{Binding IsSelected.Value, Converter={StaticResource BooleanToVisibilityConverterKey}}">
									<Grid Width="100" Height="30"
										  HorizontalAlignment="Left"
										  Visibility="{Binding ElementName=ConfigGrid, Path=Visibility, Converter={StaticResource VisibilityInverseConverterKey}}">
										<!-- Connect -->
										<Button x:Name="ConnectButton"
												Style="{StaticResource NormalButtonStyle}"
												Content="Connect"
												Visibility="{Binding ElementName=DisconnectButton, Path=Visibility, Converter={StaticResource VisibilityInverseConverterKey}}"
												Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.ConnectCommand}"/>

										<!-- Disconnect -->
										<Button x:Name="DisconnectButton"
												Style="{StaticResource NormalButtonStyle}"
												Content="Disconnect"
												Visibility="{Binding IsConnected.Value, Converter={StaticResource BooleanToVisibilityConverterKey}}"
												Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.DisconnectCommand}"/>
									</Grid>

									<Grid x:Name="ConfigGrid"
										  Width="260" Height="30"
										  HorizontalAlignment="Left"
										  Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.IsConfigMode.Value, Converter={StaticResource BooleanToVisibilityConverterKey}}">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="80"/>
											<ColumnDefinition Width="80"/>
											<ColumnDefinition Width="20"/>
											<ColumnDefinition Width="80"/>
										</Grid.ColumnDefinitions>

										<!-- Up -->
										<Button Grid.Column="0"
												Style="{StaticResource NormalButtonStyle}"
												Content="Up"
												Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.MoveUpCommand}"/>

										<!-- Down -->
										<Button Grid.Column="1"
												Style="{StaticResource NormalButtonStyle}"
												Content="Down"
												Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.MoveDownCommand}"/>

										<!-- Delete -->
										<Button Grid.Column="3"
												Style="{StaticResource NormalButtonStyle}"
												Content="Delete"
												IsEnabled="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.IsNotWorking.Value}">
											<i:Interaction.Triggers>
												<i:EventTrigger EventName="Click">
													<ei:ChangePropertyAction TargetObject="{Binding ElementName=ConfirmationBox, Mode=OneWay}"
																			 PropertyName="Visibility"
																			 Value="Visible"/>
													<ei:ChangePropertyAction TargetObject="{Binding ElementName=ConfirmationHeader, Mode=OneWay}"
																			 PropertyName="Text"
																			 Value="Delete: "/>
													<ei:ChangePropertyAction TargetObject="{Binding ElementName=ConfirmationBody, Mode=OneWay}"
																			 PropertyName="Text"
																			 Value="{Binding Name}"/>
													<ei:ChangePropertyAction TargetObject="{Binding ElementName=ConfirmationButton, Mode=OneWay}"
																			 PropertyName="Command"
																			 Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.DeleteCommand}"/>
												</i:EventTrigger>
											</i:Interaction.Triggers>
										</Button>
									</Grid>
								</Grid>
							</StackPanel>
						</controls:ProfileContentControl>
					</DataTemplate>
				</ListView.ItemTemplate>
				<ListView.ItemContainerStyle>
					<Style TargetType="{x:Type ListViewItem}">
						<Setter Property="IsSelected" Value="{Binding IsSelected.Value, Mode=OneWayToSource}"/>
						<Setter Property="Margin" Value="0"/>
						<Setter Property="OverridesDefaultStyle" Value="True"/>
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="{x:Type ContentControl}">
									<ContentPresenter/>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>
				</ListView.ItemContainerStyle>

				<i:Interaction.Behaviors>
					<behaviors:ListBoxSelectedItemBehavior IsSelectionSwitched="{Binding IsConfigMode.Value}"/>
				</i:Interaction.Behaviors>
			</ListView>
		</Grid>

		<!-- Overlay -->
		<Grid x:Name="ConfirmationBox"
			  Visibility="Collapsed">
			<Grid Background="{StaticResource App.Background.Inactive}">
				<i:Interaction.Triggers>
					<i:EventTrigger EventName="MouseDown">
						<ei:ChangePropertyAction TargetObject="{Binding ElementName=ConfirmationBox, Mode=OneWay}"
												 PropertyName="Visibility"
												 Value="Collapsed"/>
					</i:EventTrigger>
				</i:Interaction.Triggers>
			</Grid>

			<Border Height="100"
					Background="{StaticResource App.Background}"
					UseLayoutRounding="True">
				<StackPanel VerticalAlignment="Center">
					<TextBlock Height="30"
							   HorizontalAlignment="Center"
							   Foreground="{StaticResource App.Foreground}"
							   FontSize="14">
						<Run x:Name="ConfirmationHeader"/>
						<Run x:Name="ConfirmationBody"/>
					</TextBlock>

					<Grid Height="30"
						  HorizontalAlignment="Center">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="100"/>
							<ColumnDefinition Width="20"/>
							<ColumnDefinition Width="100"/>
						</Grid.ColumnDefinitions>

						<!-- OK -->
						<Button Grid.Column="0"
								x:Name="ConfirmationButton"
								Style="{StaticResource NormalButtonStyle}"
								Content="OK">
							<i:Interaction.Triggers>
								<i:EventTrigger EventName="Click">
									<ei:ChangePropertyAction TargetObject="{Binding ElementName=ConfirmationBox, Mode=OneWay}"
															 PropertyName="Visibility"
															 Value="Collapsed"/>
								</i:EventTrigger>
							</i:Interaction.Triggers>
						</Button>

						<!-- Cancel -->
						<Button Grid.Column="2"
								Style="{StaticResource NormalButtonStyle}"
								Content="Cancel">
							<i:Interaction.Triggers>
								<i:EventTrigger EventName="Click">
									<ei:ChangePropertyAction TargetObject="{Binding ElementName=ConfirmationBox, Mode=OneWay}"
															 PropertyName="Visibility"
															 Value="Collapsed"/>
								</i:EventTrigger>
							</i:Interaction.Triggers>
						</Button>
					</Grid>
				</StackPanel>
			</Border>
		</Grid>

		<!--<controls:MovingControl Style="{StaticResource BubbleStyle}"
								IsEnabled="{Binding IsUpdating.Value}">
			<i:Interaction.Behaviors>
				<behaviors:FrameworkElementCenterBehavior Target="{Binding ElementName=RescanButton}"/>
			</i:Interaction.Behaviors>
		</controls:MovingControl>-->
	</Grid>
</Window>