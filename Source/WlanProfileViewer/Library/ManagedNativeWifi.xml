<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ManagedNativeWifi</name>
    </assembly>
    <members>
        <member name="T:ManagedNativeWifi.Common.DisposableContainer`1">
            <summary>
            Container of disposable object
            </summary>
            <typeparam name="T">Disposable object type</typeparam>
            <remarks>
            If a disposable object is given as content when this container is instantiated,
            the content object will not be disposed when this container is disposed.
            In contrast, if no disposable object is given (if it is default, in the case of class, null)
            as content when this container is instantiated, a new disposable object is instantiated
            instead and the content object will be disposed when this container is disposed.
            </remarks>
        </member>
        <member name="M:ManagedNativeWifi.Win32.NativeMethod.DOT11_SSID.ToBytes">
            <summary>
            Returns the byte array of SSID.
            </summary>
            <returns>Byte array</returns>
        </member>
        <member name="M:ManagedNativeWifi.Win32.NativeMethod.DOT11_SSID.ToString">
            <summary>
            Returns the UTF-8 string representation of SSID
            </summary>
            <returns>If successfully converted the byte array of SSID, UTF-8 string. If not, null.</returns>
        </member>
        <member name="M:ManagedNativeWifi.Win32.NativeMethod.DOT11_MAC_ADDRESS.ToBytes">
            <summary>
            Returns the byte array of MAC address
            </summary>
            <returns></returns>
        </member>
        <member name="M:ManagedNativeWifi.Win32.NativeMethod.DOT11_MAC_ADDRESS.ToString">
            <summary>
            Returns the hexadecimal string representation of MAC address delimited by colon.
            </summary>
            <returns>Hexadecimal string</returns>
        </member>
        <member name="F:ManagedNativeWifi.Win32.NativeMethod.DOT11_BSS_TYPE.dot11_BSS_type_infrastructure">
            <summary>
            Infrastructure BSS network
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.Win32.NativeMethod.DOT11_BSS_TYPE.dot11_BSS_type_independent">
            <summary>
            Independent BSS (IBSS) network
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.Win32.NativeMethod.DOT11_BSS_TYPE.dot11_BSS_type_any">
            <summary>
            Either infrastructure or IBSS network
            </summary>
        </member>
        <member name="T:ManagedNativeWifi.Win32.SafeClientHandle">
            <summary>
            Wrapper class only for handle taken by WlanOpenHandle function in Native Wifi API
            </summary>
            <remarks>
            This implementation is based on:
            http://referencesource.microsoft.com/#mscorlib/system/runtime/interopservices/safehandle.cs
            </remarks>
        </member>
        <member name="M:ManagedNativeWifi.Win32.SafeClientHandle.#ctor">
            <summary>
            Default constructor
            </summary>
            <remarks>This constructor is for P/Invoke.</remarks>
        </member>
        <member name="T:ManagedNativeWifi.AuthenticationMethod">
            <summary>
            Authentication method to be used to connect to wireless LAN
            </summary>
            <remarks>
            https://msdn.microsoft.com/en-us/library/windows/desktop/ms706933.aspx
            </remarks>
        </member>
        <member name="F:ManagedNativeWifi.AuthenticationMethod.None">
            <summary>
            None (invalid value)
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.AuthenticationMethod.Open">
            <summary>
            Open 802.11 authentication
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.AuthenticationMethod.Shared">
            <summary>
            Shared 802.11 authentication
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.AuthenticationMethod.WPA_Enterprise">
            <summary>
            WPA-Enterprise 802.11 authentication
            </summary>
            <remarks>WPA in profile XML</remarks>
        </member>
        <member name="F:ManagedNativeWifi.AuthenticationMethod.WPA_Personal">
            <summary>
            WPA-Personal 802.11 authentication
            </summary>
            <remarks>WPAPSK in profile XML</remarks>
        </member>
        <member name="F:ManagedNativeWifi.AuthenticationMethod.WPA2_Enterprise">
            <summary>
            WPA2-Enterprise 802.11 authentication
            </summary>
            <remarks>WPA2 in profile XML</remarks>
        </member>
        <member name="F:ManagedNativeWifi.AuthenticationMethod.WPA2_Personal">
            <summary>
            WPA2-Personal 802.11 authentication
            </summary>
            <remarks>WPA2PSK in profile XML</remarks>
        </member>
        <member name="T:ManagedNativeWifi.AvailableNetworkPack">
            <summary>
            Wireless LAN information
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.AvailableNetworkPack.Interface">
            <summary>
            Associated wireless interface information
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.AvailableNetworkPack.Ssid">
            <summary>
            SSID (maximum 32 bytes)
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.AvailableNetworkPack.BssType">
            <summary>
            BSS network type
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.AvailableNetworkPack.SignalQuality">
            <summary>
            Signal quality (0-100)
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.AvailableNetworkPack.IsSecurityEnabled">
            <summary>
            Whether security is enabled on this network
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.AvailableNetworkPack.ProfileName">
            <summary>
            Associated wireless profile name
            </summary>
        </member>
        <member name="M:ManagedNativeWifi.AvailableNetworkPack.#ctor(ManagedNativeWifi.InterfaceInfo,ManagedNativeWifi.NetworkIdentifier,ManagedNativeWifi.BssType,System.Int32,System.Boolean,System.String)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:ManagedNativeWifi.BssNetworkPack">
            <summary>
            Wireless LAN information
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.BssNetworkPack.Interface">
            <summary>
            Associated wireless interface information
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.BssNetworkPack.Ssid">
            <summary>
            SSID (maximum 32 bytes)
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.BssNetworkPack.BssType">
            <summary>
            BSS network type
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.BssNetworkPack.Bssid">
            <summary>
            BSSID (6 bytes)
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.BssNetworkPack.SignalStrength">
            <summary>
            Signal strength (RSSI)
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.BssNetworkPack.LinkQuality">
            <summary>
            Link quality (0-100)
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.BssNetworkPack.Frequency">
            <summary>
            Wireless LAN frequency (KHz)
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.BssNetworkPack.Channel">
            <summary>
            Wireless LAN channel
            </summary>
        </member>
        <member name="M:ManagedNativeWifi.BssNetworkPack.#ctor(ManagedNativeWifi.InterfaceInfo,ManagedNativeWifi.NetworkIdentifier,ManagedNativeWifi.BssType,ManagedNativeWifi.NetworkIdentifier,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:ManagedNativeWifi.BssType">
            <summary>
            BSS network type
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.BssType.None">
            <summary>
            None (invalid value)
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.BssType.Infrastructure">
            <summary>
            Infrastructure BSS network
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.BssType.Independent">
            <summary>
            Independent BSS (IBSS) network (Ad hoc network)
            </summary>
        </member>
        <member name="T:ManagedNativeWifi.EncryptionType">
            <summary>
            Data encryption type to be used to connect to wireless LAN
            </summary>
            <remarks>
            https://msdn.microsoft.com/en-us/library/windows/desktop/ms706969.aspx
            </remarks>
        </member>
        <member name="F:ManagedNativeWifi.EncryptionType.None">
            <summary>
            None (valid value)
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.EncryptionType.WEP">
            <summary>
            WEP encryption for WEP
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.EncryptionType.TKIP">
            <summary>
            TKIP encryption for WPA/WPA2
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.EncryptionType.AES">
            <summary>
            AES (CCMP) encryption for WPA/WPA2
            </summary>
        </member>
        <member name="T:ManagedNativeWifi.InterfaceInfo">
            <summary>
            Wireless interface information
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.InterfaceInfo.Id">
            <summary>
            Interface ID
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.InterfaceInfo.Description">
            <summary>
            Interface description
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.InterfaceInfo.State">
            <summary>
            Interface state
            </summary>
        </member>
        <member name="M:ManagedNativeWifi.InterfaceInfo.#ctor(System.Guid,System.String,ManagedNativeWifi.InterfaceState)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:ManagedNativeWifi.InterfaceRadio">
            <summary>
            Wireless interface radio information
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.InterfaceRadio.Id">
            <summary>
            Interface ID
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.InterfaceRadio.RadioSets">
            <summary>
            Radio information
            </summary>
        </member>
        <member name="M:ManagedNativeWifi.InterfaceRadio.#ctor(System.Guid,System.Collections.Generic.IEnumerable{ManagedNativeWifi.RadioSet})">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:ManagedNativeWifi.InterfaceState">
            <summary>
            Wireless interface state
            </summary>
            <remarks>Equivalent to WLAN_INTERFACE_STATE</remarks>
        </member>
        <member name="F:ManagedNativeWifi.InterfaceState.NotReady">
            <summary>
            The interface is not ready to operate.
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.InterfaceState.Connected">
            <summary>
            The interface is connected to a network.
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.InterfaceState.AdHocNetworkFormed">
            <summary>
            The interface is the first node in an ad hoc network. No peer has connected.
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.InterfaceState.Disconnecting">
            <summary>
            The interface is disconnecting from the current network.
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.InterfaceState.Disconnected">
            <summary>
            The interface is not connected to any network.
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.InterfaceState.Associating">
            <summary>
            The interface is attempting to associate with a network.
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.InterfaceState.Discovering">
            <summary>
            Auto configuration is discovering the settings for the network.
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.InterfaceState.Authenticating">
            <summary>
            The interface is in the process of authenticating.
            </summary>
        </member>
        <member name="T:ManagedNativeWifi.NativeWifi">
            <summary>
            A managed implementation of Native Wifi API
            </summary>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifi.EnumerateInterfaces">
            <summary>
            Enumerates wireless interface information.
            </summary>
            <returns>Wireless interface information</returns>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifi.ScanNetworksAsync(System.TimeSpan)">
            <summary>
            Asynchronously requests wireless interfaces to scan wireless LANs.
            </summary>
            <param name="timeout">Timeout duration</param>
            <returns>Interface IDs that successfully scanned</returns>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifi.ScanNetworksAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Asynchronously requests wireless interfaces to scan wireless LANs.
            </summary>
            <param name="timeout">Timeout duration</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Interface IDs that successfully scanned</returns>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifi.EnumerateAvailableNetworkSsids">
            <summary>
            Enumerates SSIDs of available wireless LANs.
            </summary>
            <returns>SSIDs</returns>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifi.EnumerateConnectedNetworkSsids">
            <summary>
            Enumerates SSIDs of connected wireless LANs.
            </summary>
            <returns>SSIDs</returns>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifi.EnumerateAvailableNetworks">
            <summary>
            Enumerates wireless LAN information on available networks.
            </summary>
            <returns>Wireless LAN information</returns>
            <remarks>If multiple profiles are associated with a same network, there will be multiple
            entries with the same SSID.</remarks>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifi.EnumerateBssNetworks">
            <summary>
            Enumerates wireless LAN information on BSS networks.
            </summary>
            <returns>Wireless LAN information</returns>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifi.EnumerateProfileNames">
            <summary>
            Enumerates wireless profile names in preference order.
            </summary>
            <returns>Wireless profile names</returns>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifi.EnumerateProfiles">
            <summary>
            Enumerates wireless profile information in preference order.
            </summary>
            <returns>Wireless profile information</returns>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifi.SetProfile(System.Guid,ManagedNativeWifi.ProfileType,System.String,System.String,System.Boolean)">
            <summary>
            Sets (adds or overwrites) the content of a specified wireless profile.
            </summary>
            <param name="interfaceId">Interface ID</param>
            <param name="profileType">Profile type</param>
            <param name="profileXml">Profile XML</param>
            <param name="profileSecurity">Security descriptor for all-user profile</param>
            <param name="overwrite">Whether to overwrite an existing profile</param>
            <returns>True if successfully set. False if not.</returns>
            <remarks>
            If the content of the profile XML is not valid, a Win32Exception will be thrown.
            In such case, check the reason code in the message and see
            https://msdn.microsoft.com/en-us/library/windows/desktop/ms707394.aspx
            https://technet.microsoft.com/en-us/library/3ed3d027-5ae8-4cb0-ade5-0a7c446cd4f7#BKMK_AppndxE
            </remarks>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifi.SetProfilePosition(System.Guid,System.String,System.Int32)">
            <summary>
            Sets the position of a specified wireless profile in preference order.
            </summary>
            <param name="interfaceId">Interface ID</param>
            <param name="profileName">Profile name</param>
            <param name="position">Position (starting at 0)</param>
            <returns>True if successfully set. False if not.</returns>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifi.DeleteProfile(System.Guid,System.String)">
            <summary>
            Deletes a specified wireless profile.
            </summary>
            <param name="interfaceId">Interface ID</param>
            <param name="profileName">Profile name</param>
            <returns>True if successfully deleted. False if could not delete.</returns>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifi.ConnectNetwork(System.Guid,System.String,ManagedNativeWifi.BssType)">
            <summary>
            Attempts to connect to the wireless LAN associated to a specified wireless profile.
            </summary>
            <param name="interfaceId">Interface ID</param>
            <param name="profileName">Profile name</param>
            <param name="bssType">BSS network type</param>
            <returns>True if successfully requested the connection. False if failed.</returns>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifi.ConnectNetworkAsync(System.Guid,System.String,ManagedNativeWifi.BssType,System.TimeSpan)">
            <summary>
            Asynchronously attempts to connect to the wireless LAN associated to a specified wireless profile.
            </summary>
            <param name="interfaceId">Interface ID</param>
            <param name="profileName">Profile name</param>
            <param name="bssType">BSS network type</param>
            <param name="timeout">Timeout duration</param>
            <returns>True if successfully connected. False if failed or timed out.</returns>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifi.ConnectNetworkAsync(System.Guid,System.String,ManagedNativeWifi.BssType,System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Asynchronously attempts to connect to the wireless LAN associated to a specified wireless profile.
            </summary>
            <param name="interfaceId">Interface ID</param>
            <param name="profileName">Profile name</param>
            <param name="bssType">BSS network type</param>
            <param name="timeout">Timeout duration</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>True if successfully connected. False if failed or timed out.</returns>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifi.DisconnectNetwork(System.Guid)">
            <summary>
            Disconnects from the wireless LAN associated to a specified wireless interface.
            </summary>
            <param name="interfaceId">Interface ID</param>
            <returns>True if successfully requested the disconnection. False if failed.</returns>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifi.DisconnectNetworkAsync(System.Guid,System.TimeSpan)">
            <summary>
            Asynchronously disconnects from the wireless LAN associated to a specified wireless interface.
            </summary>
            <param name="interfaceId">Interface ID</param>
            <param name="timeout">Timeout duration</param>
            <returns>True if successfully disconnected. False if failed or timed out.</returns>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifi.DisconnectNetworkAsync(System.Guid,System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Asynchronously disconnects from the wireless LAN associated to a specified wireless interface.
            </summary>
            <param name="interfaceId">Interface ID</param>
            <param name="timeout">Timeout duration</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>True if successfully disconnected. False if failed or timed out.</returns>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifi.GetInterfaceRadio(System.Guid)">
            <summary>
            Gets wireless interface radio information of a specified wireless interface.
            </summary>
            <param name="interfaceId">Interface ID</param>
            <returns>Wireless interface radio information if succeeded. Null if not.</returns>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifi.TurnOnInterfaceRadio(System.Guid)">
            <summary>
            Turns on the radio of a specified wireless interface (software radio state only).
            </summary>
            <param name="interfaceId">Interface ID</param>
            <returns>True if successfully changed radio state. False if not.</returns>
            <remarks>
            If the user is not logged on as a member of Administrators group,
            an UnauthorizedAccessException should be thrown.
            </remarks>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifi.TurnOffInterfaceRadio(System.Guid)">
            <summary>
            Turns off the radio of a specified wireless interface (software radio state only).
            </summary>
            <param name="interfaceId">Interface ID</param>
            <returns>True if successfully changed radio state. False if not.</returns>
            <remarks>
            If the user is not logged on as a member of Administrators group,
            an UnauthorizedAccessException should be thrown.
            </remarks>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifi.DetectChannel(System.UInt32)">
            <summary>
            Detects wireless LAN channel from center frequency.
            </summary>
            <param name="frequency">Center frequency (KHz)</param>
            <returns>Channel number if successfully detected. 0 if not.</returns>
            <remarks>
            This method is marked as internal for unit test.
            As for 5GHz, this method may produce a channel number which is not actually in use.
            Also, some channel numbers of 5GHz overlap those of 3.6GHz. In such cases, refer
            the frequency to distinguish them.
            </remarks>
        </member>
        <member name="T:ManagedNativeWifi.NativeWifiPlayer">
            <summary>
            An instantiatable implementation of Native Wifi API
            </summary>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifiPlayer.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="E:ManagedNativeWifi.NativeWifiPlayer.NetworkRefreshed">
            <summary>
            Occurs when wireless LAN list is refreshed.
            </summary>
        </member>
        <member name="E:ManagedNativeWifi.NativeWifiPlayer.InterfaceChanged">
            <summary>
            Occurs when a wireless interface is added/removed/enabled/disabled
            </summary>
        </member>
        <member name="E:ManagedNativeWifi.NativeWifiPlayer.ConnectionChanged">
            <summary>
            Occurs when connection to wireless LAN is changed.
            </summary>
        </member>
        <member name="E:ManagedNativeWifi.NativeWifiPlayer.ProfileChanged">
            <summary>
            Occurs when a wireless profile or wireless profile name is changed.
            </summary>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifiPlayer.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifiPlayer.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing">Whether to dispose managed resources</param>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifiPlayer.EnumerateInterfaces">
            <summary>
            Enumerates wireless interface information.
            </summary>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifiPlayer.ScanNetworksAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Asynchronously requests wireless interfaces to scan wireless LANs.
            </summary>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifiPlayer.EnumerateAvailableNetworkSsids">
            <summary>
            Enumerates SSIDs of available wireless LANs.
            </summary>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifiPlayer.EnumerateConnectedNetworkSsids">
            <summary>
            Enumerates SSIDs of connected wireless LANs.
            </summary>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifiPlayer.EnumerateAvailableNetworks">
            <summary>
            Enumerates wireless LAN information on available wireless LANs.
            </summary>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifiPlayer.EnumerateBssNetworks">
            <summary>
            Enumerates wireless LAN information on BSS networks.
            </summary>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifiPlayer.EnumerateProfiles">
            <summary>
            Enumerates wireless profile information in preference order.
            </summary>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifiPlayer.SetProfile(System.Guid,ManagedNativeWifi.ProfileType,System.String,System.String,System.Boolean)">
            <summary>
            Sets (adds or overwrites) the content of a specified wireless profile.
            </summary>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifiPlayer.SetProfilePosition(System.Guid,System.String,System.Int32)">
            <summary>
            Sets the position of a specified wireless profile in preference order.
            </summary>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifiPlayer.DeleteProfile(System.Guid,System.String)">
            <summary>
            Deletes a specified wireless profile.
            </summary>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifiPlayer.ConnectNetwork(System.Guid,System.String,ManagedNativeWifi.BssType)">
            <summary>
            Attempts to connect to the wireless LAN associated to a specified wireless profile.
            </summary>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifiPlayer.ConnectNetworkAsync(System.Guid,System.String,ManagedNativeWifi.BssType,System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Asynchronously attempts to connect to the wireless LAN associated to a specified wireless profile.
            </summary>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifiPlayer.DisconnectNetwork(System.Guid)">
            <summary>
            Disconnects from the wireless LAN associated to a specified wireless interface.
            </summary>
        </member>
        <member name="M:ManagedNativeWifi.NativeWifiPlayer.DisconnectNetworkAsync(System.Guid,System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Asynchronously disconnects from the wireless LAN associated to a specified wireless interface.
            </summary>
        </member>
        <member name="T:ManagedNativeWifi.NetworkIdentifier">
            <summary>
            Identifier of wireless LAN
            </summary>
            <remarks>This class is immutable.</remarks>
        </member>
        <member name="M:ManagedNativeWifi.NetworkIdentifier.#ctor(System.Byte[],System.String)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ManagedNativeWifi.NetworkIdentifier.ToBytes">
            <summary>
            Returns the identifier in byte array.
            </summary>
            <returns>Identifier in byte array</returns>
        </member>
        <member name="M:ManagedNativeWifi.NetworkIdentifier.ToString">
            <summary>
            Returns the identifier in UTF-8 string.
            </summary>
            <returns>Identifier in UTF-8 string</returns>
        </member>
        <member name="T:ManagedNativeWifi.PhyType">
            <summary>
            802.11 PHY and media type
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.PhyType.Unknown">
            <summary>
            Unknown or uninitialized PHY type
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.PhyType.Any">
            <summary>
            Any PHY type
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.PhyType.Fhss">
            <summary>
            Frequency-hopping spread-spectrum (FHSS) PHY type
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.PhyType.Dsss">
            <summary>
            Direct sequence spread spectrum (DSSS) PHY type
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.PhyType.IrBaseband">
            <summary>
            Infrared (IR) baseband PHY type
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.PhyType.Ofdm">
            <summary>
            Orthogonal frequency division multiplexing (OFDM) PHY type
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.PhyType.HrDsss">
            <summary>
            High-rate DSSS (HRDSSS) PHY type
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.PhyType.Erp">
            <summary>
            Extended rate PHY (ERP) type
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.PhyType.Ht">
            <summary>
            802.11n PHY type
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.PhyType.Vht">
            <summary>
            802.11ac PHY type
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.PhyType.IhvStart">
            <summary>
            The start of the range that is used to define PHY types that are developed by
            an independent hardware vendor (IHV)
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.PhyType.IhvEnd">
            <summary>
            The start of the range that is used to define PHY types that are developed by
            an independent hardware vendor (IHV)
            </summary>
        </member>
        <member name="T:ManagedNativeWifi.ProfileDocument">
            <summary>
            Container of wireless profile document
            </summary>
            <remarks>
            The elements of profile XML are defined as:
            https://msdn.microsoft.com/en-us/library/windows/desktop/ms707381.aspx
            </remarks>
        </member>
        <member name="F:ManagedNativeWifi.ProfileDocument.Namespace">
            <summary>
            Target namespace of profile XML
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.ProfileDocument.Root">
            <summary>
            Root element
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.ProfileDocument.Name">
            <summary>
            Profile name
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.ProfileDocument.Ssid">
            <summary>
            SSID of associated wireless LAN
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.ProfileDocument.BssType">
            <summary>
            BSS network type of associated wireless LAN
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.ProfileDocument.Authentication">
            <summary>
            Authentication method of associated wireless LAN
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.ProfileDocument.Encryption">
            <summary>
            Encryption type of associated wireless LAN
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.ProfileDocument.IsValid">
            <summary>
            Whether profile XML is valid
            </summary>
        </member>
        <member name="M:ManagedNativeWifi.ProfileDocument.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="xml">Profile XML</param>
        </member>
        <member name="P:ManagedNativeWifi.ProfileDocument.IsAutoConnectEnabled">
            <summary>
            Whether automatic connection for this profile is enabled
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.ProfileDocument.IsAutoSwitchEnabled">
            <summary>
            Whether automatic switch for this profile is enabled
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.ProfileDocument.Xml">
            <summary>
            Profile XML
            </summary>
        </member>
        <member name="M:ManagedNativeWifi.ProfileDocument.Clone">
            <summary>
            Creates new instance cloned from this instance by deep copy.
            </summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:ManagedNativeWifi.HexadecimalStringConverter.ToBytes(System.String)">
            <summary>
            Converts string which represents a byte array in hexadecimal format to the byte array.
            </summary>
            <param name="source">Hexadecimal string</param>
            <returns>Original byte array</returns>
        </member>
        <member name="M:ManagedNativeWifi.HexadecimalStringConverter.ToHexadecimalString(System.Byte[])">
            <summary>
            Converts a byte array to string which represents the byte array in hexadecimal format.
            </summary>
            <param name="source">Original byte array</param>
            <returns>Hexadecimal string</returns>
        </member>
        <member name="T:ManagedNativeWifi.ProfilePack">
            <summary>
            Wireless profile information
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.ProfilePack.Name">
            <summary>
            Profile name
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.ProfilePack.Interface">
            <summary>
            Associated wireless interface information
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.ProfilePack.ProfileType">
            <summary>
            Profile type
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.ProfilePack.Document">
            <summary>
            Profile XML document
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.ProfilePack.ProfileXml">
            <summary>
            Profile XML string
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.ProfilePack.Ssid">
            <summary>
            SSID of associated wireless LAN
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.ProfilePack.BssType">
            <summary>
            BSS network type of associated wireless LAN
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.ProfilePack.Authentication">
            <summary>
            Authentication of associated wireless LAN
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.ProfilePack.Encryption">
            <summary>
            Encryption of associated wireless LAN
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.ProfilePack.IsAutomatic">
            <summary>
            Whether this profile is set to be automatically connected
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.ProfilePack.Position">
            <summary>
            Position in preference order of associated wireless interface
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.ProfilePack.SignalQuality">
            <summary>
            Signal quality of associated wireless LAN
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.ProfilePack.IsConnected">
            <summary>
            Whether this profile is currently connected
            </summary>
        </member>
        <member name="M:ManagedNativeWifi.ProfilePack.#ctor(System.String,ManagedNativeWifi.InterfaceInfo,ManagedNativeWifi.ProfileType,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:ManagedNativeWifi.ProfileType">
            <summary>
            Wireless profile type
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.ProfileType.AllUser">
            <summary>
            All-user profile
            </summary>
        </member>
        <member name="F:ManagedNativeWifi.ProfileType.GroupPolicy">
            <summary>
            Group policy profile
            </summary>
            <remarks>Equivalent to WLAN_PROFILE_GROUP_POLICY</remarks>
        </member>
        <member name="F:ManagedNativeWifi.ProfileType.PerUser">
            <summary>
            Per-user profile
            </summary>
            <remarks>Equivalent to WLAN_PROFILE_USER</remarks>
        </member>
        <member name="T:ManagedNativeWifi.RadioSet">
            <summary>
            Wireless radio information
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.RadioSet.Type">
            <summary>
            802.11 PHY and media type
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.RadioSet.SoftwareOn">
            <summary>
            Whether software radio state is on
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.RadioSet.HardwareOn">
            <summary>
            Whether hardware radio state is on
            </summary>
        </member>
        <member name="P:ManagedNativeWifi.RadioSet.On">
            <summary>
            Whether the radio is on
            </summary>
        </member>
        <member name="M:ManagedNativeWifi.RadioSet.#ctor(ManagedNativeWifi.PhyType,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Constructor
            </summary>
        </member>
    </members>
</doc>
